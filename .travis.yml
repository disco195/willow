language: generic

jobs:
    include:
        #
        #
        ### test ###
        - stage: test
          name: server
          before_install:
              - nvm install v11.12.0
              - nvm use v11.12.0
              - pyenv install -s 3.6.3
              - pyenv global 3.6.3
              - wget https://github.com/sormuras/bach/raw/master/install-jdk.sh
              - . ./install-jdk.sh -F 11
              - sudo ln -f -T /bin/bash /bin/sh
          install:
              - cd ./tracers/java/
              - . package.sh build
              - cd ../python/
              - . package.sh build
              - cd ../../server/
              - npm install
          script: npm run test
        #
        #
        ### test_docker ###
        - stage: test_docker
          name: server
          install:
              - cd ./tracers/java/
              - docker image build --tag willow:java .
              - cd ../python/
              - docker image build --tag willow:python .
              - cd ../../server/
              - docker image build --tag willow:server .
          script: |
              docker container run --rm --interactive --tty --volume /var/run/docker.sock:/var/run/docker.sock --entrypoint npm willow:server run test-base \
                  -- \
                  --tracer java 'docker run --rm -i willow:java --in-mode proto' 'public class Main{public static void main(String[] a) {}}' 'error!@#$' \
                  --tracer python 'docker run --rm -i willow:python --in-mode proto' 'x = 0' 'error!@#$'
        #
        #
        ### deploy ###
        - stage: deploy
          name: deploy
          # using install because no deploy provider will help to deploy on google compute engines
          before_install:
              - echo $GCLOUD_SERVICE_ACCOUNT_AUTH | base64 -di | gcloud auth activate-service-account --key-file=-
              - gcloud config set project $GCLOUD_PROJECT_NAME
              - gcloud config set compute/zone $GCLOUD_PROJECT_ZONE
              - gcloud config list
              - |
                gcloud compute instances create willow-instance \
                    --service-account=$GCLOUD_SERVICE_ACCOUNT_NAME \
                    --image=cos-stable-72-11316-171-0 --image-project=cos-cloud --machine-type=n1-standard-1 \
                    --subnet=default --tags=http-server,https-server --boot-disk-size=10GB || true
              - |
                gcloud compute firewall-rules create default-allow-http \
                --action=ALLOW --rules=tcp:80 --target-tags=http-server || true
              - |
                gcloud compute firewall-rules create default-allow-https \
                --action=ALLOW --rules=tcp:443 --target-tags=https-server || true
          install:
              - |
                echo '
                set -ev
                rm -fr ./willow/ || true
                git clone https://github.com/pedro00dk/willow
                cd ./willow/
                # kill and remove any running containers
                docker container kill $(docker container ls --all --quiet) || true
                docker container rm $(docker container ls --all --quiet) || true
                # create images
                cd ./server/
                docker image build --tag willow:server .
                cd ../tracerJava/
                docker image build --tag willow:tracerJava .
                cd ../tracerPython/
                docker image build --tag willow:tracerPython .
                cd ../tracers/
                docker image build --tag willow:tracers .
                # clean dangling images
                docker image prune --force
                # starting containers
                docker container run --name willow_tracers --network bridge --rm --detach --interactive --tty --volume /var/run/docker.sock:/var/run/docker.sock --entrypoint npm \
                    -- \
                    willow:tracers \
                    run start-base \
                    -- \
                    --port 8002 \
                    --tracer java "docker run --rm -i willow:tracerJava --in-mode proto" \
                    --tracer python "docker run --rm -i willow:tracerPython --in-mode proto"
                sleep 10 # willow_server needs the willow_tracers already running
                TRACERS_IP=$(docker container inspect --format "{{ .NetworkSettings.IPAddress }}" -- willow_tracers)
                docker container run --name willow_server --network bridge --rm --detach --interactive --tty --publish 80:8001 \
                    -- \
                    willow:server \
                    -- \
                    --port 8001 \
                    --tracers "http://${TRACERS_IP}:8002/tracers"
                ' > deploy.sh
              - gcloud compute ssh willow-instance -- sh -c "$(cat deploy.sh)"

stages:
    - name: test
    - name: test_docker
    - name: deploy
      if: branch = deploy
