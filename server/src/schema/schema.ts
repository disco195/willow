/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Base schema for trace requests (traces) and responses (result)
 */
export type Schema = Trace | Result
/**
 * Value is the representation of any program element
 */
export type Value = number | string | [string]

/**
 * Trace is a request that can be read by tracer processes
 */
export interface Trace {
    /**
     * The source code to be executed
     */
    source?: string
    /**
     * Input to be consumed the the program
     */
    input?: string
    /**
     * Maximum number of program steps
     */
    steps?: number
}
/**
 * Result stores a list of all computed steps of a program
 */
export interface Result {
    steps: Step[]
}
/**
 * Step stores the information of a program in a certain point
 */
export interface Step {
    snapshot?: Snapshot
    /**
     * The content printed during the step
     */
    prints?: string
    threw?: Threw
}
/**
 * Snapshots contains the state of a program in a certain point
 */
export interface Snapshot {
    /**
     * Snapshot info
     */
    info: 'ok' | 'warn' | 'error'
    stack: Scope[]
    heap: {
        [k: string]: Obj
    }
}
/**
 * Scope stores basic data and variables that may point to the heap
 */
export interface Scope {
    /**
     * First line of the scope
     */
    line: number
    /**
     * The scope name
     */
    name: string
    variables: Variable[]
}
/**
 * Variable is a named value from the stack to the heap
 */
export interface Variable {
    /**
     * The variable name in the stack
     */
    name: string
    value: Value
}
/**
 * Objects in the heap of a program
 */
export interface Obj {
    /**
     * General type
     */
    gType: 'array' | 'linked' | 'set' | 'map'
    /**
     * Type string in the language
     */
    lType: string
    members: Member[]
}
/**
 * Member is one element of a object of any kind
 */
export interface Member {
    key: Value
    value: Value
}
/**
 * Indicates that the program stop before finishing or maybe even starting
 */
export interface Threw {
    /**
     * Controlled threw not caused by the program
     */
    cause?: string
    exception?: Exception
}
/**
 * Exception is an uncaught error of the program or the tracer itself.
 */
export interface Exception {
    /**
     * The string in the language
     */
    type: string
    /**
     * The error stacktrace
     */
    traceback: string
}
