/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Base schema for trace requests (traces) and responses (results).
 */
export type Schema = Trace | Result
/**
 * Value is the representation of any program element.
 */
export type Value = number | string | [string]

/**
 * Trace is a request containing source code, inputs and maximum amount of steps to execute.
 */
export interface Trace {
    /**
     * The source code to be executed.
     */
    source?: string
    /**
     * Input to be consumed the the program.
     */
    input?: string
    /**
     * Maximum number of program steps.
     */
    steps?: number
}
/**
 * Result stores a list of all computed steps of a program.
 */
export interface Result {
    steps: Step[]
}
/**
 * Step stores the information of a program at a certain execution point.
 */
export interface Step {
    snapshot?: Snapshot
    /**
     * The content printed at the step.
     */
    prints?: string
    threw?: Threw
}
/**
 * Snapshots contains the state of a program at a certain execution point.
 */
export interface Snapshot {
    /**
     * State information.
     */
    info: 'ok' | 'warn' | 'error'
    stack: Scope[]
    heap: {
        [k: string]: Obj
    }
}
/**
 * Scope stores basic data and variables that may point to the heap.
 */
export interface Scope {
    /**
     * First line of the scope.
     */
    line: number
    /**
     * The scope name.
     */
    name: string
    members: Member[]
}
/**
 * Member is a variable of a scope or element of an object.
 */
export interface Member {
    key: Value
    value: Value
}
/**
 * Objects in the heap. They must have the same id for different runs of the same program.
 */
export interface Obj {
    /**
     * The object type.
     */
    type: string
    /**
     * Category.
     */
    category: 'list' | 'set' | 'map' | 'other'
    members: Member[]
}
/**
 * Indicates that the program or the tracer stopped due to some problem.
 */
export interface Threw {
    /**
     * Forced controlled stop caused by the tracer.
     */
    cause?: string
    exception?: Exception
}
/**
 * Uncaught error of the program or the tracer itself.
 */
export interface Exception {
    /**
     * The error type.
     */
    type: string
    /**
     * The error traceback.
     */
    traceback: string
}
