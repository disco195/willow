{
    "main": "./public/index.html",
    "devDependencies": {
        "@types/classnames": "2.2.9",
        "@types/node": "latest",
        "@types/react": "16.8.23",
        "@types/react-dom": "16.8.4",
        "@types/react-grid-layout": "0.16.7",
        "http-server": "latest",
        "json-schema-to-typescript": "latest",
        "parcel-bundler": "latest",
        "prettier": "latest",
        "tslint": "latest",
        "tslint-config-prettier": "latest",
        "typescript": "latest"
    },
    "dependencies": {
        "@babel/polyfill": "7.4.4",
        "axios": "0.19.0",
        "brace": "0.11.1",
        "classnames": "2.2.6",
        "emotion": "10.0.14",
        "react": "16.9.0",
        "react-contexify": "4.1.1",
        "react-dom": "16.9.0",
        "react-split-pane": "0.1.87",
        "redux": "4.0.4",
        "redux-thunk": "2.3.0"
    },
    "scripts": {
        "format": "shopt -s extglob globstar && tslint -c ./tslint.json -p ./package.json && prettier --config ./.prettierrc.js -c --write ./src/**/*.ts* && shopt -u extglob globstar",
        "schema": "mkdir -p ./src/schema && json2ts -i ../schemas/schema.json -o ./src/schema/schema.ts",
        "//01": "",
        "//02": "build environment variables",
        "//03": "SERVER: sets the server address in the client to generate the bundler, client-side CORS will be automatically enabled",
        "//04": "                            bundler requests  +----------------+",
        "//05": "                        +---------------------| bundler server |",
        "//06": "+--------+   requests   |                     +----------------+",
        "//07": "| client |--------------+",
        "//08": "+--------+              |                     +----------------+",
        "//09": "                        +---------------------| api server     |",
        "//10": "                            api requests      +----------------+",
        "//11": "",
        "//12": "PROXY: ignores SERVER env and indicates that the client bundle server is also a reverse proxy to the API server (can be any length > 0 value, just the presence is checked)",
        "//13": "+--------+   bundler and api requests   +----------------+   api requests   +----------------+",
        "//14": "| client |------------------------------| bundler server |------------------| api server     |",
        "//15": "+--------+                              +----------------+                  +----------------+",
        "//16": "",
        "build": "parcel build --no-cache --no-source-maps --public-url ./ -d ./dist/build -- \"$npm_package_main\"",
        "//17": "",
        "//18": "start envs (includes build envs)",
        "//19": "PORT: sets the server development server port ",
        "//20": "",
        "//21": "note -> SERVER env must be set instead of PROXY because the development server does not support reverse proxy",
        "//22": "",
        "start": "parcel serve --no-cache -d ./dist/ -p \"$PORT\" -- \"$npm_package_main\"",
        "//23": "",
        "//24": "serve|serve-proxy envs (includes start envs)",
        "//25": "note -> serve script is used to start a server in production mode using a different library.",
        "//26": "        The PORT is used in the new server instead of the development server from start script.",
        "//27": "",
        "//28": "note -> in serve-proxy script the SERVE env is used by the bundle server reverse proxy to find the api server.",
        "//29": "        Because of that, PROXY env must be set to make the client SERVER env this variable and use the",
        "//30": "        bundle server as a reverse proxy",
        "//31": "",
        "serve": "npm run build && http-server -p \"$PORT\" -- ./dist/build",
        "serve-proxy": "npm run build && http-server -p \"$PORT\" --proxy \"$SERVER\" -- ./dist/build"
    }
}
