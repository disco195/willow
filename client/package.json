{
    "main": "./public/index.html",
    "devDependencies": {
        "@types/classnames": "2.2.7",
        "@types/node": "11.12.0",
        "@types/react": "16.8.10",
        "@types/react-dom": "16.8.3",
        "@types/react-grid-layout": "0.16.7",
        "http-server": "0.11.1",
        "parcel-bundler": "1.12.3",
        "prettier": "1.16.4",
        "protobufjs": "6.8.8",
        "tslint": "5.14.0",
        "tslint-config-prettier": "1.18.0",
        "typescript": "3.3.4000"
    },
    "dependencies": {
        "@babel/polyfill": "7.4.0",
        "axios": "0.18.0",
        "brace": "0.11.1",
        "classnames": "2.2.6",
        "emotion": "10.0.9",
        "react": "16.8.6",
        "react-contexify": "4.1.0",
        "react-dom": "16.8.6",
        "react-split-pane": "0.1.87",
        "redux": "4.0.1",
        "redux-thunk": "2.3.0"
    },
    "scripts": {
        "format": "shopt -s extglob globstar && tslint -c ./tslint.json -p ./package.json -e ./src/protobuf/protocol.ts && prettier --config ./.prettierrc.js -c --write ./src/**/!\\(protocol\\).ts* && shopt -u extglob globstar",
        "protobuf": "mkdir -p ./src/protobuf && pbjs -t static-module --es6 -o ./src/protobuf/protocol.js -p ../protobuf/ -- ../protobuf/*.proto && pbts --no-comments -o ./src/protobuf/protocol.ts -- ./src/protobuf/protocol.js && rm ./src/protobuf/protocol.js && sed -i -r -e '/^.*(import|constructor|public toJSON|public static).*$/d' -e 's/([^t]) (class|interface|enum|namespace)/\\1 export \\2/g' -- ./src/protobuf/protocol.ts",
        "//": "",
        "//": "build envs",
        "//": "SERVER: sets the server address in the client to generate the bundler, client-side CORS will be automatically enabled",
        "//": "                            bundler requests  +----------------+",
        "//": "                        +---------------------| bundler server |",
        "//": "+--------+   requests   |                     +----------------+",
        "//": "| client |--------------+",
        "//": "+--------+              |                     +----------------+",
        "//": "                        +---------------------| api server     |",
        "//": "                            api requests      +----------------+",
        "//": "",
        "//": "PROXY: ignores SERVER env and indicates that the client bundle server is also a reverse proxy to the API server (can be any length > 0 value, just the presence is checked)",
        "//": "+--------+   bundler and api requests   +----------------+   api requests   +----------------+",
        "//": "| client |------------------------------| bundler server |------------------| api server     |",
        "//": "+--------+                              +----------------+                  +----------------+",
        "//": "",
        "build": "parcel build --no-cache --no-source-maps --public-url ./ -d ./dist/build -- \"$npm_package_main\"",
        "//": "",
        "//": "start envs (includes build envs)",
        "//": "PORT: sets the server development server port ",
        "//": "",
        "//": "obs -> SERVER env must be set instead of PROXY because the development server does not support reverse proxy",
        "//": "",
        "start": "parcel serve --no-cache -d ./dist/ -p \"$PORT\" -- \"$npm_package_main\"",
        "//": "",
        "//": "serve|serve-proxy envs (includes start envs)",
        "//": "obs -> serve script is used to start a server in production mode using a different library.",
        "//": "       The PORT is used in the new server instead of the development server from start script.",
        "//": "",
        "//": "obs -> in serve-proxy script the SERVE env is used by the bundle server reverse proxy to find the api server.",
        "//": "       Because of that, PROXY env must be set to make the client SERVER env this variable and use the",
        "//": "       bundle server as a reverse proxy",
        "//": "",
        "serve": "npm run build && http-server -p \"$PORT\" -- ./dist/build",
        "serve-proxy": "npm run build && http-server -p \"$PORT\" --proxy \"$SERVER\" -- ./dist/build"
    }
}
